<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace属性：用于指定当前的映射文件与哪个接口进行映射，需要制定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.cy.store.mapper.UserMapper">



    <!--（放在文件首位）自定义映射规则：resultMap标签啦完成映射规则的定义-->
    <!--
        id属性：表示给这个映射负责分配唯一的id值，（相当于给该映射起名），对应的就是其他标签中resultMap=“id属性的值”属性的取值
        type属性：取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集的映射
    -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--功能：将表的资源和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写-->
        <!--
            配合完成名称不一致地映射:
            column属性：表示表中的资源名称
            property属性：表示类中的属性名称
        -->
        <!--在定义映射规则时，主键不可以省略-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>




    <!--ID属性：表示映射的接口中方法的名称，直接在标签的内容部来编写SQL语句-->
    <!--
        useGeneratedKeys属性：表示开启某个字段的值递增（主键设置为递增）
        keyProperty属性：标签将表中的哪个字段作为主键进行递增
        VALUE中需要填写占位符，需要使用#{}的形式
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (username, password, salt, phone, email, gender, avatar,
        is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
        (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender},
        #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser},
        #{modifiedTime})
    </insert>


    <!--select语句在执行的时候，查询的结果是一个对象，多个对象-->
    <!--
        resultType：表示查询的结果集类型，只需要制定对应映射类的类型，并且包含完整包接口：resultType="com.cy.store.entity.User"
        使用了自定义映射之后在自定义的映射的type标签中已经指定了所使用的类，故无需再使用resultType
        resultMap：表示当表的资源和类的对象属性的字段名称不一致时，来自定义查询结果集的映射规则
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>
    <!--更新密码-->
    <update id="updatePasswordByUid" >
        UPDATE
        t_user
        SET
            password = #{password},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE
            uid = #{uid}
    </update>
    <!--根据uid查找用户数据-->
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid = #{uid}
    </select>
    <!--更新用户信息-->
    <update id="updateInfoByUid">
        UPDATE t_user SET
        <!--<if test="">表示条件判断，test接受的是一个返回值为boolean类型的条件
        如果true，执行-->
        <if test="phone!=null">phone = #{phone},</if>
        <if test="email!=null">email = #{email},</if>
        <if test="gender!=null">gender = #{gender},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
    <!--根据用户id修改用户头像-->
    <update id="updateAvatarByUid">
        UPDATE t_user SET
        <if test="phone!=null">avatar = #{avatar},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>
</mapper>